Set使用总结:
1.当你创建自己的类型的时候，要意识到因为Set内部需要一种方式来维护顺序，然而存储顺序如何维护根据不同的Set实现是不同的，
2.Set只是一个接口，存入Set中的每一个元素都必须是唯一的，Set不保存重复的元素，加入Set的元素必须定义equals方法来确保元素的唯一性，
Set接口不保证维护元素的次序。
3.HashSet:为了快速查找而设计的Set，存入Set的元素必须定义hashCode方法。
4.TreeSet:保持次序的Set，底层是树结构，使用它可以从Set中提取有序的序列，愿所有必须实现Comparable接口。
5.LinkedHashSet:具有HashSet的查询速度，内部是使用链表来维护元素的顺序的，在使用迭代器的时候会按照插入的顺序显示，
存入的元素也必须要实现hashCode方法。
在没有其他限制的情况下首选的是HashSet。

SortedSet:
可以是其中的元素保持排序的状态，意识是按照对象的比较函数进行元素的排序。